#!/usr/bin/env sh

while read file
do
    # Check if pywal-env exist, if not install all necessary system components for pywal
    [ -f $HOME/.local/share/pywal-env/bin/activate ] ||  \
        (notify-send "no pywal-env detected, installing..." \
            && python -m virtualenv $HOME/.local/share/pywal-env \
            && source $HOME/.local/share/pywal-env/bin/activate \
            && pip install pywal colorz colorthief haishoku \
            && notify-send "installed pywal-env")

    case "$1" in
        "w") source $HOME/.local/share/pywal-env/bin/activate && backend=$(wal --backend | awk '{print $2}' | awk '/[a-z]/' | dmenu -i -p "choose pywal backend" -l 15) && wal -n -i "$file" --backend $backend && sleep 3 && xrdb ~/.cache/wal/.Xresources && setbg "$file" && echo $backend > ~/.config/pywal_backend || notify-send "wallpaper failed";;
        "q") apply-hald-clut.sh "$file" | xargs -L 1 notify-send ;;
        "l") $TERMINAL -e vim ~/.local/bin/apply-hald-clut.sh "$file" ;;
        "j") convert $file ${file}.jpg ;;
        "p") darktable "$file" ;;
        # "e") $TERMINAL -e vim ~/.config/sxiv/exec/key-handler & ;;
        "e") $TERMINAL -e vim  ~/.config/sxiv/exec/key-handler & ;;
        "o") pkill sxiv && sxiv -t `dirname "$file"` || notify-send "$file" ;;
        "c")
            [ -z "$destdir" ] && destdir="$(sed "s/\s.*#.*$//;/^\s*$/d" ~/.config/directories | awk '{print $2}' | dmenu -l 20 -i -p "Copy file(s) to where?" | sed "s|~|$HOME|g")"
            [ -z "$destdir" ] && exit
            cp "$file" "$destdir" && notify-send -i "$(readlink -f "$file")" "$file copied to $destdir." &
            ;;
        "m")
            [ -z "$destdir" ] && destdir="$(sed "s/\s.*#.*$//;/^\s*$/d" ~/.config/directories | awk '{print $2}' | dmenu -l 20 -i -p "Move file(s) to where?" | sed "s|~|$HOME|g")"
            [ -z "$destdir" ] && exit
            mv "$file" "$destdir" && notify-send -i "$(readlink -f "$file")" "$file moved to $destdir." &
            ;;
        "r")
            convert -rotate 90 "$file" "$file" ;;
        "R")
            convert -rotate -90 "$file" "$file" ;;
        "f")
            convert -flop -flip "$file" "$file" ;;
        "y")
            echo -n "$file" | xclip -selection clipboard &&
                notify-send "$file copied to clipboard" & ;;
        "Y")
            readlink -f "$file" | xclip -selection clipboard &&
                notify-send "$(readlink -f "$file") copied to clipboard" & ;;
        "d")
            [ "$(printf "No\\nYes" | dmenu -i -p "Really delete $file?")" = "Yes" ] && rm "$file" && notify-send "$file deleted." ;;
        "g")	ifinstalled gimp && gimp "$file" & ;;
            esac
done
